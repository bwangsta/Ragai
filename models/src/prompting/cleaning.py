from typing import List

import os
from constants import LLM_ID, CREDENTIALS, GEN_PARAMS, SPACE_ID, VERIFY, TAGS_PROMPT, DESCRIPTION_PROMPT
from ibm_watson_machine_learning.foundation_models import Model
from src.tagging.tagging import create_tags
from dotenv import load_dotenv

load_dotenv()

project_id = os.environ["PROJECT_ID"]
model = Model(LLM_ID, CREDENTIALS, GEN_PARAMS, project_id, SPACE_ID, VERIFY)


def clean_tags(ram_tags:str) -> str:
    """Cleans the tags generated by RAM with an LLM. 

    Args:
        ram_tags (str): tags generated by RAM. 

    Returns:
        str: clean tags.
    """
    tags_prompt = TAGS_PROMPT+ram_tags
    clean_tags = model.generate_text(prompt=tags_prompt)
    return clean_tags

def generate_description(clean_tags:str) -> str:
    """Cleans the tags generated by RAM with a LLM. 

    Args:
        clean_tags (str): tags generated by RAM that were cleaned by a LLM. 

    Returns:
        str: the item description.
    """
    description =  DESCRIPTION_PROMPT+clean_tags
    item_description = model.generate_text(prompt=description)
    return item_description
